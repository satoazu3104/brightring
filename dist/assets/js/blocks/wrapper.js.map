{"version":3,"file":"assets/js/blocks/wrapper.js","mappings":"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","sources":["webpack://portart/external window [\"wp\",\"blocks\"]","webpack://portart/external window [\"wp\",\"blockEditor\"]","webpack://portart/external window [\"wp\",\"components\"]","webpack://portart/external window [\"wp\",\"element\"]","webpack://portart/./src/js/blocks/wrapper.js"],"sourcesContent":["var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","import { registerBlockType } from '@wordpress/blocks';\nimport { InnerBlocks, InspectorControls, PanelColorSettings, URLInput } from '@wordpress/block-editor';\nimport { Button, TextControl, CheckboxControl, TextareaControl, RadioControl } from '@wordpress/components';\nimport { useState } from '@wordpress/element';\n\nregisterBlockType('portart/wrapper', {\n  title: 'wrapper',\n  icon: 'smiley',\n  category: 'layout',\n  attributes: {\n    wrapToggle: {\n      type: 'boolean',\n      default: false,\n    },\n    addClassName: {\n      type: 'string',\n      default: '',\n    },\n    addId: {\n      type: 'string',\n      default: '',\n    },\n    addAttr: {\n      type: 'string',\n      default: '',\n    },\n    linkUrl: {\n      type: 'string',\n      default: '',\n    },\n    isChecked: {\n      type: 'boolean',\n      default: false,\n    },\n    display: {\n      type: 'string',\n      default: '', // デフォルト値\n    }\n  },\n\n  edit: ({ attributes, attributes: { addClassName, addId, addAttr, linkUrl, wrapToggle, isChecked, display }, setAttributes }) => {\n    const [toggle, setToggle] = useState(wrapToggle);\n\n    const onChangeClass = (newText) => {\n      setAttributes({\n        addClassName: newText\n      });\n    }\n    const onChangeAttr = (newAttr) => {\n      setAttributes({\n        addAttr: newAttr\n      });\n    }\n    const onChangeId = (newId) => {\n      setAttributes({\n        addId: newId\n      });\n    }\n\n    const onChangeLinkUrl = (newLinkUrl) => {\n      setAttributes({\n        linkUrl: newLinkUrl\n      });\n    }\n\n    return (\n      <div className='b-wrapper__box'>\n        <div className='b-wrapper__box__tool'>\n          <span className='c-text__med b-wrapper__class'>Class名: {addClassName}</span>\n          <Button\n            isSecondary\n            onClick={() => {\n              if(display == '') {\n                setAttributes({display: 'pc'})\n              } else if(display == 'pc') {\n                setAttributes({display: 'sp'})\n              } else {\n                setAttributes({display: ''})\n              }\n            }}\n          >\n            {display ? display+'のみ表示' : '両方表示'}\n          </Button>\n          <Button\n            isSecondary\n            onClick={() => { setToggle(!toggle); setAttributes({ wrapToggle: !toggle }) }}\n          >\n            {toggle ? '開く' : '折りたたむ'}\n          </Button>\n        </div>\n        <InspectorControls>\n          <TextareaControl\n            label=\"追加class\"\n            value={addClassName}\n            onChange={onChangeClass}\n          />\n          <TextControl\n            label=\"追加Id\"\n            value={addId}\n            onChange={onChangeId}\n          />\n          <TextControl\n            label=\"追加Attr\"\n            value={addAttr}\n            onChange={onChangeAttr}\n          />\n          <URLInput\n            label=\"リンクURL\"\n            value={linkUrl}\n            onChange={onChangeLinkUrl}\n          />\n          {linkUrl && (\n            <CheckboxControl\n              label=\"別タブでリンクを開く\"\n              checked={isChecked}\n              onChange={(checked) => setAttributes({ isChecked: checked })}\n            />\n          )}\n        </InspectorControls>\n        <div style={{\n          height: toggle ? '0px' : 'auto',\n          overflow: toggle ? 'hidden' : 'unset',\n        }}>\n          <InnerBlocks />\n        </div>\n      </div>\n    )\n  },\n\n  save: ({ className, attributes: { addClassName, addId, addAttr, linkUrl, isChecked, display } }) => {\n    const attrArray = addAttr.split(' ');\n    let attrs = {};\n    for (let i = 0; i < attrArray.length; i++) {\n      const label = attrArray[i].substr(0, attrArray[i].indexOf('='));\n      const value = attrArray[i].substr((attrArray[i].indexOf('=') + 1)).replace(/\"/g, '');\n      attrs[label] = value;\n    }\n\n    let fixClass = addClassName.replace(/\\n/g, ' ');\n    fixClass += ' '+display;\n\n    if (linkUrl && isChecked) {\n      return (\n        <>\n          <a id={addId} className={fixClass} {...attrs} href={linkUrl} target=\"_blank\" rel=\"noopener noreferrer\" >\n            <object>\n              <InnerBlocks.Content />\n            </object>\n          </a>\n        </>\n      )\n    } else if (linkUrl) {\n      return (\n        <>\n          <a id={addId} className={fixClass} {...attrs} href={linkUrl} >\n            <object>\n              <InnerBlocks.Content />\n            </object>\n          </a>\n        </>\n      )\n    } else {\n      return (\n        <>\n          <div id={addId} className={fixClass} {...attrs}>\n            <InnerBlocks.Content />\n          </div>\n        </>\n      )\n    }\n  }\n})"],"names":["window","registerBlockType","title","icon","category","attributes","wrapToggle","type","default","addClassName","addId","addAttr","linkUrl","isChecked","display","edit","setAttributes","toggle","setToggle","useState","wp","element","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Button","isSecondary","onClick","InspectorControls","TextareaControl","label","value","onChange","newText","TextControl","newId","newAttr","URLInput","newLinkUrl","CheckboxControl","checked","style","height","overflow","InnerBlocks","save","attrArray","split","attrs","i","length","substr","indexOf","replace","fixClass","Fragment","_extends","id","href","target","rel","Content"],"sourceRoot":""}